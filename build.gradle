
buildscript {
    repositories {
        mavenCentral()
        google()
        maven { url "https://jitpack.io" }
        maven {
            url "https://plugins.gradle.org/m2/"
        }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.0.4'
        classpath "de.mannodermaus.gradle.plugins:android-junit5:1.7.1.1"
    }
}



apply plugin: 'com.android.library'
apply plugin: 'de.mannodermaus.android-junit5'



android {
    defaultConfig {
        compileSdkVersion 30
        minSdkVersion 29
        targetSdkVersion 30
        multiDexEnabled true

    }

        lintOptions {
            abortOnError false
        }



    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
        }
    }
}

allprojects {
    apply plugin: 'com.android.library'
    apply plugin: 'de.mannodermaus.android-junit5'




    configurations {
        compile.exclude group: 'org.hamcrest', name: 'hamcrest'

    }



    android {




        defaultConfig {
            minSdkVersion 29
            compileSdkVersion 29
            targetSdkVersion 30
            multiDexEnabled true
            testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
            // 2) Connect JUnit 5 to the runner
            testInstrumentationRunnerArguments["runnerBuilder"] = "de.mannodermaus.junit5.AndroidJUnit5Builder"
        }

        packagingOptions {
            exclude 'license/README.dom.txt'
            exclude '**.md'
            exclude 'license/NOTICE'
            exclude 'license/LICENSE'
            exclude 'license/LICENSE.dom-software.txt'

            exclude 'license/LICENSE.dom-documentation.txt'
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/ASL2.0'
            exclude 'xsd/binding.xml'
            exclude 'xsd/bindings.xml'
            exclude 'xsd/catalog.cat'

            exclude("META-INF/*.kotlin_module")
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }




        sourceSets {
            main {
                manifest.srcFile 'AndroidManifest.xml'


               // res.srcDirs = ['res']
            }

//            androidTest {
//                java.srcDirs = ['src/androidTest/java']
//                res.srcDirs = ['src/androidTest/resources']
//            }

//            androidTest {
//                resources.srcDirs += ['src/test/res']
//                java.srcDirs = ['src/test/java']
//            }


        }
    }




    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8







    repositories {
        mavenCentral()
        google()
        maven { url "https://maven.andob.info/repository/open_source" }
        maven { url "https://jitpack.io" }
        maven { url "https://ec.europa.eu/digital-building-blocks/artifact/content/repositories/esignaturedss" }

    }

    ext {
        logback_classic_version = "1.2.10"
        bouncycastle_version = "1.70"
        xmlsec_version = "2.3.0"
        jose4j_version = "0.7.9"
        pdfbox_version = "2.0.25"
        openpdf_version = "1.3.26"
        httpclient5_version = "5.1.2"
        commons_codec_version = "1.15"
        jakarta_bind_api_version = "2.3.3"
        jakarta_activation_api_version = "1.2.2"
        jaxb_runtime_version = "2.3.5"
        jakarta_rs_api_version = "2.1.6"
        jakarta_ws_api_version = "2.3.2"
        junit_version = "5.8.2"
        awaitility_version = "4.1.1"
        mockito_version = "3.12.4"
        h2database_version = "2.1.210"
        jackson_version = "2.13.2"
        jackson_databind_version = "2.13.2.2"
        fop_core_version = "2.7"
        slf4j_version = "1.7.35"
        xml_apis_version = "1.4.01"
        project_version="5.10.1"
    }


    dependencies {

        androidTestImplementation("androidx.test:runner:1.4.0")
        androidTestImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
        testImplementation('org.junit.jupiter:junit-jupiter:5.8.2')
        androidTestImplementation('org.junit.jupiter:junit-jupiter:5.8.2')


        // 5) The instrumentation test companion libraries
        androidTestImplementation("de.mannodermaus.junit5:android-test-core:1.3.0")
        androidTestRuntimeOnly("de.mannodermaus.junit5:android-test-runner:1.3.0")



//        implementation 'com.github.ndpgroup:jaxb-android:0.2.0'

//        implementation 'com.github.andob:android-awt:1.0.0'




//        implementation "org.apache.httpcomponents.client5:httpclient5:${httpclient5_version}"
//        implementation "org.apache.pdfbox:pdfbox:${pdfbox_version}"
//        implementation "org.apache.pdfbox:preflight:${pdfbox_version}"
//        implementation "com.github.librepdf:openpdf:${openpdf_version}"
//        implementation "org.apache.santuario:xmlsec:${xmlsec_version}"
        implementation "org.bouncycastle:bcprov-jdk15on:${bouncycastle_version}"
        implementation "org.bouncycastle:bcpkix-jdk15on:${bouncycastle_version}"
//        implementation "org.bitbucket.b_c:jose4j:${jose4j_version}"
//        implementation "org.slf4j:slf4j-api:${slf4j_version}"
//        implementation "org.slf4j:jcl-over-slf4j:${slf4j_version}"
        implementation "ch.qos.logback:logback-classic:${logback_classic_version}"
        implementation "org.apache.xmlgraphics:fop-core:${fop_core_version}"
        implementation "org.apache.xmlgraphics:xmlgraphics-commons:${fop_core_version}"
//        implementation "xml-apis:xml-apis:${xml_apis_version}"
//        implementation "jakarta.xml.bind:jakarta.xml.bind-api:${jakarta_bind_api_version}"
        implementation 'xerces:xercesImpl:2.12.2'




//        implementation "jakarta.activation:jakarta.activation-api:${jakarta_activation_api_version}"
//        implementation "org.glassfish.jaxb:jaxb-runtime:${jaxb_runtime_version}"
     //   implementation "jakarta.ws.rs:jakarta.ws.rs-api:${jakarta_rs_api_version}"
        implementation "jakarta.xml.ws:jakarta.xml.ws-api:${jakarta_ws_api_version}"


        androidTestImplementation("org.awaitility:awaitility:${awaitility_version}") {
            exclude group: 'org.hamcrest', module: 'hamcrest'
        }


        implementation "org.mockito:mockito-core:${mockito_version}"
        testImplementation enforcedPlatform("org.junit:junit-bom:${junit_version}")
    //    implementation "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jackson_version}"
      //  implementation "com.fasterxml.jackson.core:jackson-databind:${jackson_databind_version}"
        implementation 'org.json:json:20220320'
        implementation 'ro.andob.androidawt:androidawt:1.0.4'
       // implementation 'com.github.orlleite:xerces-for-android:1.0'
// https://mvnrepository.com/artifact/jakarta.xml.bind/jakarta.xml.bind-api
        implementation 'org.glassfish.jaxb:jaxb-runtime:3.1.0-M1'


//        testImplementation 'org.apache.commons:commons-lang3:3.12.0'
//        testImplementation 'org.apache.commons:commons-collections4:4.4'
        androidTestImplementation project(':dss-utils-google-guava')
        androidTestImplementation project(':dss-crl-parser-x509crl')
        androidTestImplementation project(':dss-test')
//        androidTestImplementation project(':dss-pades-pdfbox')



    }
}

